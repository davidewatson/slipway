
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: imagemirrors.slipway.k8s.facebook.com
spec:
  group: slipway.k8s.facebook.com
  names:
    kind: ImageMirror
    listKind: ImageMirrorList
    plural: imagemirrors
    singular: imagemirror
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ImageMirror is the Schema for the imagemirrors API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ImageMirrorSpec defines the desired state of ImageMirror
          properties:
            dest_repository:
              description: DestRepository is a URL resource as above, which is used
                to push mirrored container images.
              type: string
            image_name:
              description: ImageName is the name of the image without tag (e.g. cuda).
              type: string
            source_repository:
              description: 'SourceRepository is a URL resource, including scheme (optional),
                registry host, and registry organization (e.g. docker.io/dwat/) which
                will be used to pull images to mirror. NOTE: This must not include
                the container image name or any tags.'
              type: string
            tag_regex:
              description: Pattern is a regex matching the tags which should be mirrored.
                We follow Flux (who of course copied as well) because compatibility
                is nice for our users. Cf. https://github.com/fluxcd/flux/blob/v1.19.0/pkg/policy/pattern.go
              type: string
          required:
          - dest_repository
          - image_name
          - source_repository
          type: object
        status:
          description: ImageMirrorStatus defines the observed state of ImageMirror
          properties:
            mirrored_tags:
              description: MirroredTags is a slice of tags which have already been
                mirrored.
              items:
                type: string
              type: array
          required:
          - mirrored_tags
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
